/* tslint:disable */
/* eslint-disable */
/**
 * NestJS Swagger
 * API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { WorstDelayEntry } from './WorstDelayEntry';
import {
    WorstDelayEntryFromJSON,
    WorstDelayEntryFromJSONTyped,
    WorstDelayEntryToJSON,
} from './WorstDelayEntry';

/**
 * 
 * @export
 * @interface Stats
 */
export interface Stats {
    /**
     * Whether the stats are filled.
     * @type {boolean}
     * @memberof Stats
     */
    filled: boolean;
    /**
     * When the stats were last updated.
     * @type {Date}
     * @memberof Stats
     */
    time: Date;
    /**
     * The most delayed trips of all time
     * @type {Array<WorstDelayEntry>}
     * @memberof Stats
     */
    allTimeDelays: Array<WorstDelayEntry>;
    /**
     * The most delayed trips of the last 24 hours
     * @type {Array<WorstDelayEntry>}
     * @memberof Stats
     */
    last24HoursDelays: Array<WorstDelayEntry>;
}

/**
 * Check if a given object implements the Stats interface.
 */
export function instanceOfStats(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "filled" in value;
    isInstance = isInstance && "time" in value;
    isInstance = isInstance && "allTimeDelays" in value;
    isInstance = isInstance && "last24HoursDelays" in value;

    return isInstance;
}

export function StatsFromJSON(json: any): Stats {
    return StatsFromJSONTyped(json, false);
}

export function StatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Stats {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'filled': json['filled'],
        'time': (new Date(json['time'])),
        'allTimeDelays': ((json['allTimeDelays'] as Array<any>).map(WorstDelayEntryFromJSON)),
        'last24HoursDelays': ((json['last24HoursDelays'] as Array<any>).map(WorstDelayEntryFromJSON)),
    };
}

export function StatsToJSON(value?: Stats | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'filled': value.filled,
        'time': (value.time.toISOString()),
        'allTimeDelays': ((value.allTimeDelays as Array<any>).map(WorstDelayEntryToJSON)),
        'last24HoursDelays': ((value.last24HoursDelays as Array<any>).map(WorstDelayEntryToJSON)),
    };
}

