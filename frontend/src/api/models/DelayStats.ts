/* tslint:disable */
/* eslint-disable */
/**
 * NestJS Swagger
 * API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DelayStats
 */
export interface DelayStats {
    /**
     * Status of the leg stats.
     * @type {string}
     * @memberof DelayStats
     */
    status: DelayStatsStatusEnum;
    /**
     * The average delay.
     * @type {number}
     * @memberof DelayStats
     */
    averageDelay: number;
    /**
     * The standard deviation of the delay.
     * @type {number}
     * @memberof DelayStats
     */
    standardDeviation: number;
    /**
     * The maximum delay.
     * @type {number}
     * @memberof DelayStats
     */
    maxDelay: number;
    /**
     * The minimum delay.
     * @type {number}
     * @memberof DelayStats
     */
    minDelay: number;
}


/**
 * @export
 */
export const DelayStatsStatusEnum = {
    Available: 'available',
    Unavailable: 'unavailable'
} as const;
export type DelayStatsStatusEnum = typeof DelayStatsStatusEnum[keyof typeof DelayStatsStatusEnum];


/**
 * Check if a given object implements the DelayStats interface.
 */
export function instanceOfDelayStats(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "averageDelay" in value;
    isInstance = isInstance && "standardDeviation" in value;
    isInstance = isInstance && "maxDelay" in value;
    isInstance = isInstance && "minDelay" in value;

    return isInstance;
}

export function DelayStatsFromJSON(json: any): DelayStats {
    return DelayStatsFromJSONTyped(json, false);
}

export function DelayStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): DelayStats {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': json['status'],
        'averageDelay': json['averageDelay'],
        'standardDeviation': json['standardDeviation'],
        'maxDelay': json['maxDelay'],
        'minDelay': json['minDelay'],
    };
}

export function DelayStatsToJSON(value?: DelayStats | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': value.status,
        'averageDelay': value.averageDelay,
        'standardDeviation': value.standardDeviation,
        'maxDelay': value.maxDelay,
        'minDelay': value.minDelay,
    };
}

