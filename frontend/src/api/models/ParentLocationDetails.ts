/* tslint:disable */
/* eslint-disable */
/**
 * NestJS Swagger
 * API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LocationCoordinates } from './LocationCoordinates';
import {
    LocationCoordinatesFromJSON,
    LocationCoordinatesFromJSONTyped,
    LocationCoordinatesToJSON,
} from './LocationCoordinates';
import type { ParentLocation } from './ParentLocation';
import {
    ParentLocationFromJSON,
    ParentLocationFromJSONTyped,
    ParentLocationToJSON,
} from './ParentLocation';

/**
 * 
 * @export
 * @interface ParentLocationDetails
 */
export interface ParentLocationDetails {
    /**
     * Short name of the location. Can be empty string.
     * @type {string}
     * @memberof ParentLocationDetails
     */
    shortName?: string;
    /**
     * 
     * @type {LocationCoordinates}
     * @memberof ParentLocationDetails
     */
    coordinates?: LocationCoordinates;
    /**
     * 
     * @type {ParentLocation}
     * @memberof ParentLocationDetails
     */
    parent?: ParentLocation;
}

/**
 * Check if a given object implements the ParentLocationDetails interface.
 */
export function instanceOfParentLocationDetails(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ParentLocationDetailsFromJSON(json: any): ParentLocationDetails {
    return ParentLocationDetailsFromJSONTyped(json, false);
}

export function ParentLocationDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ParentLocationDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'shortName': !exists(json, 'shortName') ? undefined : json['shortName'],
        'coordinates': !exists(json, 'coordinates') ? undefined : LocationCoordinatesFromJSON(json['coordinates']),
        'parent': !exists(json, 'parent') ? undefined : ParentLocationFromJSON(json['parent']),
    };
}

export function ParentLocationDetailsToJSON(value?: ParentLocationDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'shortName': value.shortName,
        'coordinates': LocationCoordinatesToJSON(value.coordinates),
        'parent': ParentLocationToJSON(value.parent),
    };
}

