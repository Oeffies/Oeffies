/* tslint:disable */
/* eslint-disable */
/**
 * NestJS Swagger
 * API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WorstDelayEntry
 */
export interface WorstDelayEntry {
    /**
     * The short name of the route
     * @type {string}
     * @memberof WorstDelayEntry
     */
    routeShortName: string;
    /**
     * The long name of the route
     * @type {string}
     * @memberof WorstDelayEntry
     */
    routeLongName: string;
    /**
     * The id to the route
     * @type {string}
     * @memberof WorstDelayEntry
     */
    routeId: string;
    /**
     * The delay
     * @type {number}
     * @memberof WorstDelayEntry
     */
    delay: number;
    /**
     * The planned time
     * @type {Date}
     * @memberof WorstDelayEntry
     */
    planned: Date;
    /**
     * The estimated time
     * @type {Date}
     * @memberof WorstDelayEntry
     */
    estimated: Date;
}

/**
 * Check if a given object implements the WorstDelayEntry interface.
 */
export function instanceOfWorstDelayEntry(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "routeShortName" in value;
    isInstance = isInstance && "routeLongName" in value;
    isInstance = isInstance && "routeId" in value;
    isInstance = isInstance && "delay" in value;
    isInstance = isInstance && "planned" in value;
    isInstance = isInstance && "estimated" in value;

    return isInstance;
}

export function WorstDelayEntryFromJSON(json: any): WorstDelayEntry {
    return WorstDelayEntryFromJSONTyped(json, false);
}

export function WorstDelayEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorstDelayEntry {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'routeShortName': json['routeShortName'],
        'routeLongName': json['routeLongName'],
        'routeId': json['routeId'],
        'delay': json['delay'],
        'planned': (new Date(json['planned'])),
        'estimated': (new Date(json['estimated'])),
    };
}

export function WorstDelayEntryToJSON(value?: WorstDelayEntry | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'routeShortName': value.routeShortName,
        'routeLongName': value.routeLongName,
        'routeId': value.routeId,
        'delay': value.delay,
        'planned': (value.planned.toISOString()),
        'estimated': (value.estimated.toISOString()),
    };
}

