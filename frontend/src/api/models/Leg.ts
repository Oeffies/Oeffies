/* tslint:disable */
/* eslint-disable */
/**
 * NestJS Swagger
 * API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { JourneyLocation } from './JourneyLocation';
import {
    JourneyLocationFromJSON,
    JourneyLocationFromJSONTyped,
    JourneyLocationToJSON,
} from './JourneyLocation';
import type { LegDetails } from './LegDetails';
import {
    LegDetailsFromJSON,
    LegDetailsFromJSONTyped,
    LegDetailsToJSON,
} from './LegDetails';
import type { Transportation } from './Transportation';
import {
    TransportationFromJSON,
    TransportationFromJSONTyped,
    TransportationToJSON,
} from './Transportation';

/**
 * 
 * @export
 * @interface Leg
 */
export interface Leg {
    /**
     * 
     * @type {JourneyLocation}
     * @memberof Leg
     */
    origin: JourneyLocation;
    /**
     * 
     * @type {JourneyLocation}
     * @memberof Leg
     */
    destination: JourneyLocation;
    /**
     * 
     * @type {Transportation}
     * @memberof Leg
     */
    transportation: Transportation;
    /**
     * 
     * @type {LegDetails}
     * @memberof Leg
     */
    details: LegDetails;
}

/**
 * Check if a given object implements the Leg interface.
 */
export function instanceOfLeg(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "origin" in value;
    isInstance = isInstance && "destination" in value;
    isInstance = isInstance && "transportation" in value;
    isInstance = isInstance && "details" in value;

    return isInstance;
}

export function LegFromJSON(json: any): Leg {
    return LegFromJSONTyped(json, false);
}

export function LegFromJSONTyped(json: any, ignoreDiscriminator: boolean): Leg {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'origin': JourneyLocationFromJSON(json['origin']),
        'destination': JourneyLocationFromJSON(json['destination']),
        'transportation': TransportationFromJSON(json['transportation']),
        'details': LegDetailsFromJSON(json['details']),
    };
}

export function LegToJSON(value?: Leg | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'origin': JourneyLocationToJSON(value.origin),
        'destination': JourneyLocationToJSON(value.destination),
        'transportation': TransportationToJSON(value.transportation),
        'details': LegDetailsToJSON(value.details),
    };
}

