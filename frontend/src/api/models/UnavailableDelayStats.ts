/* tslint:disable */
/* eslint-disable */
/**
 * NestJS Swagger
 * API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UnavailableDelayStats
 */
export interface UnavailableDelayStats {
    /**
     * Status of the leg stats.
     * @type {string}
     * @memberof UnavailableDelayStats
     */
    status: UnavailableDelayStatsStatusEnum;
    /**
     * The reason, why the data is not available
     * @type {string}
     * @memberof UnavailableDelayStats
     */
    reason: string;
}


/**
 * @export
 */
export const UnavailableDelayStatsStatusEnum = {
    Available: 'available',
    Unavailable: 'unavailable'
} as const;
export type UnavailableDelayStatsStatusEnum = typeof UnavailableDelayStatsStatusEnum[keyof typeof UnavailableDelayStatsStatusEnum];


/**
 * Check if a given object implements the UnavailableDelayStats interface.
 */
export function instanceOfUnavailableDelayStats(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "reason" in value;

    return isInstance;
}

export function UnavailableDelayStatsFromJSON(json: any): UnavailableDelayStats {
    return UnavailableDelayStatsFromJSONTyped(json, false);
}

export function UnavailableDelayStatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): UnavailableDelayStats {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': json['status'],
        'reason': json['reason'],
    };
}

export function UnavailableDelayStatsToJSON(value?: UnavailableDelayStats | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': value.status,
        'reason': value.reason,
    };
}

