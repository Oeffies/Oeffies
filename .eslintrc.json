{
  // use eslint schema
  "$schema": "http://json.schemastore.org/eslintrc",
  "root": true,
  "env": {
    "es6": true
  },
  "plugins": [
    "@typescript-eslint",
    "import"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "rules": {
    "arrow-body-style": [
      "error",
      "as-needed"
    ],
    "no-debugger": 2,
    "no-console": 0,
    "no-empty": "error",
    "@typescript-eslint/explicit-function-return-type": [
      "error",
      {
        "allowExpressions": true
      }
    ],
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": [
          "camelCase"
        ],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "allow"
      },
      {
        "selector": [
          "function",
          "variable"
        ],
        "format": [
          "camelCase",
          "UPPER_CASE",
          "PascalCase"
        ],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "allow"
      },
      {
        "selector": "typeLike",
        "format": [
          "PascalCase"
        ]
      }
    ],
    "@typescript-eslint/semi": "error",
    "comma-dangle": [
      "error",
      "never"
    ],
    "eqeqeq": "warn",
    "indent": "off",
    "no-constant-binary-expression": "warn",
    "no-constructor-return": "warn",
    "no-duplicate-imports": "warn",
    "no-multiple-empty-lines": [
      "warn",
      {
        "max": 1
      }
    ],
    "no-new-native-nonconstructor": "warn",
    "no-promise-executor-return": [
      "warn",
      {
        "allowVoid": true
      }
    ],
    "no-self-compare": "error",
    "no-template-curly-in-string": "error",
    "no-throw-literal": "warn",
    "no-unmodified-loop-condition": "error",
    "no-unreachable-loop": "error",
    "no-unused-private-class-members": "error",
    "require-atomic-updates": [
      "error",
      {
        "allowProperties": true
      }
    ],
    "prefer-const": "warn",
    "semi": "off",
    "quotes": [
      "warn",
      "double",
      {
        "allowTemplateLiterals": true
      }
    ]
  }
}
