{
  "openapi": "3.0.0",
  "paths": {
    "/app/helloworld": {
      "get": {
        "operationId": "AppController_getHello",
        "summary": "returns a \"Hello World!\" message",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns a \"Hello World!\" message.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloWorld"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "app"
        ]
      }
    },
    "/users": {
      "get": {
        "operationId": "UsersController_findAll",
        "summary": "returns all users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return all Users as JSON array.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "post": {
        "operationId": "UsersController_create",
        "summary": "creates a new user, returns the created on",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create a User.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/users/{index}": {
      "get": {
        "operationId": "UsersController_findOne",
        "summary": "returns a specific user",
        "parameters": [
          {
            "name": "index",
            "required": true,
            "in": "path",
            "description": "Users index",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return a User by index.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppHttpException"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "patch": {
        "operationId": "UsersController_update",
        "summary": "updates a specific user",
        "parameters": [
          {
            "name": "index",
            "required": true,
            "in": "path",
            "description": "Users index",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Update a User by index.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppHttpException"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      },
      "delete": {
        "operationId": "UsersController_remove",
        "summary": "deletes a specific user",
        "parameters": [
          {
            "name": "index",
            "required": true,
            "in": "path",
            "description": "Users index",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete a User by index.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppHttpException"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ]
      }
    }
  },
  "info": {
    "title": "NestJS Swagger",
    "description": "API description",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "components": {
    "schemas": {
      "HelloWorld": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of a User",
            "example": "John Smith"
          },
          "age": {
            "type": "number",
            "description": "Age of a User",
            "example": 45
          },
          "city": {
            "type": "string",
            "description": "City of a User",
            "example": "New York"
          }
        },
        "required": [
          "name",
          "age",
          "city"
        ]
      },
      "AppHttpException": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "description": "Http status code",
            "example": 404
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "User not found."
          }
        },
        "required": [
          "statusCode",
          "message"
        ]
      }
    }
  }
}
