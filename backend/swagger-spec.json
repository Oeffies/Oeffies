{
  "openapi": "3.0.0",
  "paths": {
    "/location_finder/at_coordinates": {
      "post": {
        "operationId": "LocationFinderController_findLocationsAtCoordinates",
        "summary": "finds locations at given coordinates",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationCoordinatesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the found locations.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Location"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        },
        "tags": [
          "location_finder"
        ]
      }
    },
    "/location_finder/by_name": {
      "post": {
        "operationId": "LocationFinderController_findLocationsByName",
        "summary": "finds locations by name",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationNameDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the found locations.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Location"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        },
        "tags": [
          "location_finder"
        ]
      }
    },
    "/journey": {
      "post": {
        "operationId": "JourneyController_queryJourney",
        "summary": "queries a journey",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JourneyRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Journeys.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Journey"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        },
        "tags": [
          "journey"
        ]
      }
    }
  },
  "info": {
    "title": "NestJS Swagger",
    "description": "API description",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "components": {
    "schemas": {
      "LocationCoordinatesDto": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "description": "Latitude of the location to search.",
            "example": 51.50598042775682
          },
          "longitude": {
            "type": "number",
            "description": "Longitude of the location to search.",
            "example": 7.101082448485377
          }
        },
        "required": [
          "latitude",
          "longitude"
        ]
      },
      "Location": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the location.",
            "example": "de:05513:5613"
          },
          "name": {
            "type": "string",
            "description": "(Full) Name of the location.",
            "example": "Gelsenkirchen, Hbf"
          },
          "type": {
            "type": "string",
            "description": "Type of the location.",
            "enum": [
              "address",
              "crossing",
              "gis",
              "locality",
              "parking",
              "platform",
              "poi",
              "poiHierarchy",
              "sharing",
              "stop",
              "street",
              "suburb",
              "unknown",
              "singlehouse"
            ],
            "example": "stop"
          },
          "details": {
            "description": "Further details of the location.",
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationDetails"
              }
            ]
          }
        },
        "required": [
          "details"
        ]
      },
      "LocationDetails": {
        "type": "object",
        "properties": {
          "shortName": {
            "type": "string",
            "description": "Short name of the location.",
            "example": "Hbf"
          },
          "matchQuality": {
            "type": "number",
            "description": "Quality how well the given location meets the related query (biggest number is the best result).",
            "example": 805
          },
          "parent": {
            "description": "Parent location of this location.",
            "example": {
              "id": "placeID:5513000:9",
              "name": "Gelsenkirchen",
              "type": "locality"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/Location"
              }
            ]
          },
          "latitude": {
            "type": "number",
            "description": "Latitude of the location.",
            "example": 51.50493
          },
          "longitude": {
            "type": "number",
            "description": "Longitude of the location.",
            "example": 7.10221
          }
        }
      },
      "BadRequest": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "object",
            "description": "Http status code",
            "example": 400
          },
          "message": {
            "type": "object",
            "description": "Error message",
            "example": "Bad request."
          }
        },
        "required": [
          "statusCode",
          "message"
        ]
      },
      "LocationNameDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the location to search.",
            "example": "Gelsen"
          },
          "limit": {
            "type": "number",
            "description": "Limit of the number of results.",
            "example": 5
          }
        },
        "required": [
          "name"
        ]
      },
      "JourneyRequestDto": {
        "type": "object",
        "properties": {
          "originId": {
            "type": "string",
            "description": "Origin (id) of the trip.",
            "example": "de:05513:5613"
          },
          "destinationId": {
            "type": "string",
            "description": "Destination (id) of the trip.",
            "example": "de:05562:4982"
          },
          "departure": {
            "format": "date-time",
            "type": "string",
            "description": "Date of the trip to start.",
            "example": "2023-12-01T11:30:00.000Z"
          },
          "asArrival": {
            "type": "boolean",
            "description": "Use departure date as arrival.",
            "default": false,
            "example": false
          }
        },
        "required": [
          "originId",
          "destinationId",
          "departure"
        ]
      },
      "Time": {
        "type": "object",
        "properties": {
          "estimated": {
            "format": "date-time",
            "type": "string",
            "description": "Time estimated.",
            "example": "2023-08-29T16:58:00.000Z"
          },
          "planned": {
            "format": "date-time",
            "type": "string",
            "description": "Time planned.",
            "example": "2023-08-29T17:23:00.000Z"
          }
        }
      },
      "JourneyLocation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the location.",
            "example": "de:05513:5613"
          },
          "name": {
            "type": "string",
            "description": "(Full) Name of the location.",
            "example": "Gelsenkirchen, Hbf"
          },
          "type": {
            "type": "string",
            "description": "Type of the location.",
            "enum": [
              "address",
              "crossing",
              "gis",
              "locality",
              "parking",
              "platform",
              "poi",
              "poiHierarchy",
              "sharing",
              "stop",
              "street",
              "suburb",
              "unknown",
              "singlehouse"
            ],
            "example": "stop"
          },
          "details": {
            "description": "Further details of the location.",
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationDetails"
              }
            ]
          },
          "arrival": {
            "description": "Arrival time.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Time"
              }
            ]
          },
          "departure": {
            "description": "Departure time.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Time"
              }
            ]
          }
        },
        "required": [
          "details",
          "arrival",
          "departure"
        ]
      },
      "Trip": {
        "type": "object",
        "properties": {
          "arrivalTimePlannedJourneyDestination": {
            "type": "string",
            "description": "Planned arrival time at destination."
          },
          "departureTimePlannedJourneyOrigin": {
            "type": "string",
            "description": "Planned departure time at Origin."
          },
          "status": {
            "type": "string",
            "description": "Status information about trip."
          },
          "trainNumber": {
            "type": "string",
            "description": "Train number."
          }
        }
      },
      "Transportation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of transportation vehicle.",
            "example": "Regionalbahn 46"
          },
          "trips": {
            "description": "Trips depending on this transportation.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Trip"
            }
          }
        }
      },
      "LegInfo": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Leg origin",
            "example": "Linie RE42: Fahrradmitnahme begrenzt möglich"
          }
        }
      },
      "LegDetails": {
        "type": "object",
        "properties": {
          "distance": {
            "type": "number",
            "description": "Distance of leg in meter?"
          },
          "duration": {
            "type": "number",
            "description": "Duration of leg in seconds.",
            "example": 480
          },
          "infos": {
            "description": "Leg information.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LegInfo"
            }
          },
          "hints": {
            "description": "Leg hints.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LegInfo"
            }
          },
          "realtimeTripStatus": {
            "type": "array",
            "description": "Leg real time status.",
            "items": {
              "type": "string",
              "enum": [
                "DEVIATION",
                "EXTRA_STOPS",
                "EXTRA_TRIP",
                "MONITORED",
                "OUTSIDE_REALTIME_WINDOW",
                "PROGNOSIS_IMPOSSIBLE",
                "REALTIME_ONLY_INFORMATIVE",
                "TRIP_CANCELLED"
              ]
            }
          }
        }
      },
      "Leg": {
        "type": "object",
        "properties": {
          "origin": {
            "description": "Leg origin",
            "allOf": [
              {
                "$ref": "#/components/schemas/JourneyLocation"
              }
            ]
          },
          "destination": {
            "description": "Leg destination.",
            "allOf": [
              {
                "$ref": "#/components/schemas/JourneyLocation"
              }
            ]
          },
          "transportation": {
            "description": "Leg transportation.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Transportation"
              }
            ]
          },
          "details": {
            "description": "Leg details.",
            "allOf": [
              {
                "$ref": "#/components/schemas/LegDetails"
              }
            ]
          }
        },
        "required": [
          "details"
        ]
      },
      "Journey": {
        "type": "object",
        "properties": {
          "legs": {
            "description": "Legs of a journey.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Leg"
            }
          }
        }
      }
    }
  }
}